
const { Client } = require("pg");
require("dotenv").config();


const createTables = `
CREATE TABLE items (
    id SERIAL PRIMARY KEY,
    name VARCHAR(128) NOT NULL
);

CREATE TABLE categories (
    id SERIAL PRIMARY KEY,
    name VARCHAR(128) NOT NULL
);

CREATE TABLE item_categories (
    item_id INT REFERENCES items(id) ON DELETE CASCADE,
    category_id INT REFERENCES categories(id) ON DELETE CASCADE,
    PRIMARY KEY (item_id, category_id)
);

CREATE TABLE regions (
    id SERIAL PRIMARY KEY,
    name VARCHAR(128) NOT NULL
);

CREATE TABLE regional_prices (
    item_id INT REFERENCES Items(id) ON DELETE CASCADE,
    region_id INT REFERENCES regions(id) ON DELETE CASCADE,
    price DECIMAL(10, 2) NOT NULL,
    PRIMARY KEY (item_id, region_id)
);
`
const insertIntoCategories = `
INSERT INTO categories (name) VALUES
('Fresh vegetables'),
('Fresh fruits'),
('Canned foods'),
('Sauces'),
('Drinks'),
('Spices & herbs'),
('Oils/Vinegars'),
('Refrigerated items'),
('Dairy'),
('Cheese'),
('Frozen'),
('Meat'),
('Seafood'),
('Baked goods'),
('Baking'),
('Snacks');
`

const insertIntoItems = `
INSERT INTO items (name) VALUES

-- Fresh Vegetables (Category ID 1)
('Asparagus'),
('Beets'),
('Broccoli'),
('Cauliflower'),
('Carrots'),
('Celery'),
('Corn'),
('Cucumbers'),
('Greens'),
('Lettuce'),
('Mushrooms'),
('Onions'),
('Peppers'),
('Potatoes'),
('Spinach'),
('Sprouts'),
('Squash'),
('Tomatoes'),
('Zucchini'),

-- Fresh Fruits (Category ID 2)
('Apples'),
('Avocado'),
('Bananas'),
('Berries'),
('Cherries'),
('Grapes'),
('Kiwis'),
('Lemons'),
('Limes'),
('Melons'),
('Oranges'),
('Peaches'),
('Pears'),
('Plums'),

-- Canned Foods (Category ID 3)
('Canned Applesauce'),
('Canned Baked Beans'),
('Canned Beans'),
('Canned Carrots'),
('Canned Corn'),
('Canned Mixed Fruit'),
('Canned Mixed Veggies'),
('Canned Olives'),
('Canned Pasta Sauce'),
('Canned Pickles'),
('Canned Refried Beans'),
('Canned Tuna'),
('Canned Soup'),
('Canned Tomatoes'),

-- Sauces (Category ID 4)
('BBQ Sauce'),
('Hot Sauce'),
('Salsa'),
('Soy Sauce'),
('Steak Sauce'),
('Sweet And Sour Sauce'),
('Worcestershire Sauce'),

-- Drinks (Category ID 5)
('Sparkling Water'),
('Sweet Tea'),
('Protein Shake'),
('Coffee'),
('Green Tea'),
('Honey'),
('Jelly'),
('Ketchup'),
('Lemonade'),
('Limeade'),
('Coca Cola'),
('Pepsi'),
('Mt. Dew'),
('Dr. Pepper'),
('Coconut Water'),
('Tonic Water'),
('Energy Drink'),
('Milkshake'),
('Mocktail'),
('Herbal Tea'),

-- Spices & Herbs (Category ID 6)
('Basil'),
('Black Pepper'),
('Cilantro'),
('Cinnamon'),
('Garlic'),
('Oregano'),
('Parsley'),
('Red Pepper'),
('Salt'),
('Vanilla Extract'),

-- Oils/Vinegars (Category ID 7)
('Apple Cider Vinegar'),
('Balsamic Vinegar'),
('Salad Dressing'),
('Olive Oil'),
('Vegetable Oil'),
('White Vinegar'),

-- Refrigerated Items (Category ID 8)
('Chip Dip'),
('Eggs'),
('Juice'),
('Tofu'),
('Tortillas'),

-- Dairy (Category ID 9)
('Butter'),
('Half & Half'),
('Heavy Cream'),
('Margarine'),
('Milk'),
('Sour Cream'),
('Whipped Cream'),
('Yogurt'),

-- Cheese (Category ID 10)
('Cheddar'),
('Cottage Cheese'),
('Cream Cheese'),
('Feta'),
('Mozzarella'),
('Parmesan'),
('Pepper'),
('Provolone'),
('Ricotta'),
('Sandwich Slices'),
('Shredded'),
('Swiss'),

-- Frozen (Category ID 11)
('Frozen Burritos'),
('Frozen Desserts'),
('Fish Sticks'),
('Ice Cream'),
('Juices'),
('Frozen Pizzas'),
('Popsicles'),
('Tater Tots'),
('Sorbet'),
('TV Dinners'),
('Frozen Vegetables'),
('Frozen Veggie Burgers'),

-- Meat (Category ID 12)
('Bacon'),
('Beef'),
('Chicken'),
('Ground Beef'),
('Ground Turkey'),
('Ham'),
('Hot Dogs'),
('Pork'),
('Sausage'),
('Steak'),
('Turkey'),

-- Seafood (Category ID 13)
('Catfish'),
('Cocktail Sauce'),
('Crab'),
('Halibut'),
('Oysters'),
('Salmon'),
('Shrimp'),
('Tilapia'),
('Tuna'),

-- Baked Goods (Category ID 14)
('Bagels'),
('Buns'),
('Cake'),
('Cookies'),
('Crackers'),
('Croissants'),
('Donuts'),
('French Bread'),
('Pastries'),
('Pie'),
('Pitas'),
('Rolls'),
('Sliced Bread'),

-- Baking (Category ID 15)
('Baking Powder'),
('Baking Soda'),
('Bread Crumbs'),
('Brown Sugar'),
('Cake Decorations'),
('Cake Icing'),
('Cake Mix'),
('Chocolate Chips'),
('Cocoa'),
('Flour'),
('Oatmeal'),
('Pie Shell'),
('Powdered Sugar'),
('Shortening'),
('Sugar'),
('Yeast'),

-- Snacks (Category ID 16)
('Candy'),
('Cookies'),
('Dried Fruit'),
('Granola Bars'),
('Gum'),
('Nuts'),
('Popcorn'),
('Potato Chips'),
('Pudding'),
('Pretzels'),
('Tortilla Chips');
`

const insertIntoItemCategories = `
INSERT INTO item_categories (item_id, category_id) VALUES
(1, 1),
(2, 1),
(3, 1),
(4, 1),
(5, 1),
(6, 1),
(7, 1),
(8, 1),
(9, 1),
(10, 1),
(11, 1),
(12, 1),
(13, 1),
(14, 1),
(15, 1),
(16, 1),
(17, 1),
(18, 1),
(19, 1),
(20, 2),
(21, 2),
(22, 2),
(23, 2),
(24, 2),
(25, 2),
(26, 2),
(27, 2),
(28, 2),
(29, 2),
(30, 2),
(31, 2),
(32, 2),
(33, 3),
(34, 3),
(35, 3),
(36, 3),
(37, 3),
(38, 3),
(39, 3),
(40, 3),
(41, 3),
(42, 3),
(43, 3),
(44, 3),
(45, 3),
(46, 3),
(47, 3),
(48, 4),
(49, 4),
(50, 4),
(51, 4),
(52, 4),
(53, 4),
(54, 4),
(55, 5),
(56, 5),
(57, 5),
(58, 5),
(59, 5),
(60, 5),
(61, 5),
(62, 5),
(63, 5),
(64, 5),
(65, 5),
(66, 5),
(67, 5),
(68, 5),
(69, 5),
(70, 5),
(71, 5),
(72, 5),
(73, 5),
(74, 5),
(75, 6),
(76, 6),
(77, 6),
(78, 6),
(79, 6),
(80, 6),
(81, 6),
(82, 6),
(83, 6),
(84, 6),
(85, 7),
(86, 7),
(87, 7),
(88, 7),
(89, 7),
(90, 7),
(91, 8),
(92, 8),
(93, 8),
(94, 8),
(95, 8),
(96, 9),
(97, 9),
(98, 9),
(99, 9),
(100, 9),
(101, 9),
(102, 9),
(103, 9),
(104, 10),
(105, 10),
(106, 10),
(107, 10),
(108, 10),
(109, 10),
(110, 10),
(111, 10),
(112, 10),
(113, 10),
(114, 10),
(115, 10),
(116, 11),
(117, 11),
(118, 11),
(119, 11),
(120, 11),
(121, 11),
(122, 11),
(123, 11),
(124, 11),
(125, 11),
(126, 11),
(127, 11),
(128, 12),
(129, 12),
(130, 12),
(131, 12),
(132, 12),
(133, 12),
(134, 12),
(135, 12),
(136, 12),
(137, 12),
(138, 12),
(139, 13),
(140, 13),
(141, 13),
(142, 13),
(143, 13),
(144, 13),
(145, 13),
(146, 13),
(147, 13),
(148, 14),
(149, 14),
(150, 14),
(151, 14),
(152, 14),
(153, 14),
(154, 14),
(155, 14),
(156, 14),
(157, 14),
(158, 14),
(159, 14),
(160, 14),
(161, 15),
(162, 15),
(163, 15),
(164, 15),
(165, 15),
(166, 15),
(167, 15),
(168, 15),
(169, 15),
(170, 15),
(171, 15),
(172, 15),
(173, 15),
(174, 15),
(175, 15),
(176, 15),
(177, 16),
(178, 16),
(179, 16),
(180, 16),
(181, 16),
(182, 16),
(183, 16),
(184, 16),
(185, 16),
(186, 16),
(187, 16);
`

const insertIntoRegions = `
INSERT INTO regions (name) VALUES
('Southeastern US'),
('Southwestern US'),
('Northeastern US'),
('Northwestern US');
`

const insertRegionalPrices = `
INSERT INTO regional_prices (item_id, region_id, price) VALUES
(1, 1, 1.00),
(1, 2, 1.20),
(1, 3, 1.22),
(1, 4, 1.18),
(2, 1, 3.00),
(2, 2, 3.60),
(2, 3, 3.66),
(2, 4, 3.54),
(3, 1, 4.00),
(3, 2, 4.80),
(3, 3, 4.88),
(3, 4, 4.72),
(4, 1, 2.25),
(4, 2, 2.70),
(4, 3, 2.75),
(4, 4, 2.65),
(5, 1, 2.49),
(5, 2, 2.99),
(5, 3, 3.04),
(5, 4, 2.94),
(6, 1, 2.85),
(6, 2, 3.42),
(6, 3, 3.48),
(6, 4, 3.36),
(7, 1, 2.99),
(7, 2, 3.59),
(7, 3, 3.65),
(7, 4, 3.53),
(8, 1, 2.25),
(8, 2, 2.70),
(8, 3, 2.75),
(8, 4, 2.65),
(9, 1, 3.00),
(9, 2, 3.60),
(9, 3, 3.66),
(9, 4, 3.54),
(10, 1, 4.00),
(10, 2, 4.80),
(10, 3, 4.88),
(10, 4, 4.72),
(11, 1, 4.25),
(11, 2, 5.10),
(11, 3, 5.18),
(11, 4, 5.01),
(12, 1, 3.00),
(12, 2, 3.60),
(12, 3, 3.66),
(12, 4, 3.54),
(13, 1, 4.00),
(13, 2, 4.80),
(13, 3, 4.88),
(13, 4, 4.72),
(14, 1, 5.00),
(14, 2, 6.00),
(14, 3, 6.10),
(14, 4, 5.90),
(15, 1, 4.00),
(15, 2, 4.80),
(15, 3, 4.88),
(15, 4, 4.72),
(16, 1, 4.00),
(16, 2, 4.80),
(16, 3, 4.88),
(16, 4, 4.72),
(17, 1, 3.00),
(17, 2, 3.60),
(17, 3, 3.66),
(17, 4, 3.54),
(18, 1, 4.00),
(18, 2, 4.80),
(18, 3, 4.88),
(18, 4, 4.72),
(19, 1, 2.00),
(19, 2, 2.40),
(19, 3, 2.44),
(19, 4, 2.36),
(20, 1, 1.50),
(20, 2, 1.80),
(20, 3, 1.83),
(20, 4, 1.77),
(21, 1, 1.25),
(21, 2, 1.50),
(21, 3, 1.52),
(21, 4, 1.47),
(22, 1, 2.00),
(22, 2, 2.40),
(22, 3, 2.44),
(22, 4, 2.36),
(23, 1, 2.50),
(23, 2, 3.00),
(23, 3, 3.05),
(23, 4, 2.95),
(24, 1, 3.00),
(24, 2, 3.60),
(24, 3, 3.66),
(24, 4, 3.54),
(25, 1, 4.50),
(25, 2, 5.40),
(25, 3, 5.49),
(25, 4, 5.31),
(26, 1, 5.00),
(26, 2, 6.00),
(26, 3, 6.10),
(26, 4, 5.90),
(27, 1, 4.00),
(27, 2, 4.80),
(27, 3, 4.88),
(27, 4, 4.72),
(28, 1, 5.00),
(28, 2, 6.00),
(28, 3, 6.10),
(28, 4, 5.90),
(29, 1, 4.99),
(29, 2, 5.99),
(29, 3, 6.09),
(29, 4, 5.89),
(30, 1, 5.99),
(30, 2, 7.19),
(30, 3, 7.31),
(30, 4, 7.07),
(31, 1, 5.50),
(31, 2, 6.60),
(31, 3, 6.71),
(31, 4, 6.49),
(32, 1, 6.00),
(32, 2, 7.20),
(32, 3, 7.32),
(32, 4, 7.08),
(33, 1, 6.50),
(33, 2, 7.80),
(33, 3, 7.93),
(33, 4, 7.67),
(34, 1, 3.00),
(34, 2, 3.60),
(34, 3, 3.66),
(34, 4, 3.54),
(35, 1, 1.89),
(35, 2, 2.27),
(35, 3, 2.31),
(35, 4, 2.23),
(36, 1, 1.99),
(36, 2, 2.39),
(36, 3, 2.43),
(36, 4, 2.35),
(37, 1, 2.25),
(37, 2, 2.70),
(37, 3, 2.75),
(37, 4, 2.65),
(38, 1, 3.00),
(38, 2, 3.60),
(38, 3, 3.66),
(38, 4, 3.54),
(39, 1, 6.50),
(39, 2, 7.80),
(39, 3, 7.93),
(39, 4, 7.67),
(40, 1, 5.00),
(40, 2, 6.00),
(40, 3, 6.10),
(40, 4, 5.90),
(41, 1, 5.25),
(41, 2, 6.30),
(41, 3, 6.41),
(41, 4, 6.19),
(42, 1, 3.99),
(42, 2, 4.79),
(42, 3, 4.87),
(42, 4, 4.71),
(43, 1, 4.25),
(43, 2, 5.10),
(43, 3, 5.18),
(43, 4, 5.01),
(44, 1, 2.25),
(44, 2, 2.70),
(44, 3, 2.75),
(44, 4, 2.65),
(45, 1, 3.50),
(45, 2, 4.20),
(45, 3, 4.27),
(45, 4, 4.13),
(46, 1, 2.50),
(46, 2, 3.00),
(46, 3, 3.05),
(46, 4, 2.95),
(47, 1, 2.00),
(47, 2, 2.40),
(47, 3, 2.44),
(47, 4, 2.36),
(48, 1, 2.99),
(48, 2, 3.59),
(48, 3, 3.65),
(48, 4, 3.53),
(49, 1, 5.99),
(49, 2, 7.19),
(49, 3, 7.31),
(49, 4, 7.07),
(50, 1, 5.50),
(50, 2, 6.60),
(50, 3, 6.71),
(50, 4, 6.49),
(51, 1, 6.99),
(51, 2, 8.39),
(51, 3, 8.53),
(51, 4, 8.25),
(52, 1, 5.00),
(52, 2, 6.00),
(52, 3, 6.10),
(52, 4, 5.90),
(53, 1, 8.00),
(53, 2, 9.60),
(53, 3, 9.76),
(53, 4, 9.44),
(54, 1, 7.00),
(54, 2, 8.40),
(54, 3, 8.54),
(54, 4, 8.26),
(55, 1, 4.50),
(55, 2, 5.40),
(55, 3, 5.49),
(55, 4, 5.31),
(56, 1, 3.00),
(56, 2, 3.60),
(56, 3, 3.66),
(56, 4, 3.54),
(57, 1, 5.00),
(57, 2, 6.00),
(57, 3, 6.10),
(57, 4, 5.90),
(58, 1, 4.00),
(58, 2, 4.80),
(58, 3, 4.88),
(58, 4, 4.72),
(59, 1, 4.00),
(59, 2, 4.80),
(59, 3, 4.88),
(59, 4, 4.72),
(60, 1, 4.00),
(60, 2, 4.80),
(60, 3, 4.88),
(60, 4, 4.72),
(61, 1, 4.00),
(61, 2, 4.80),
(61, 3, 4.88),
(61, 4, 4.72),
(62, 1, 4.00),
(62, 2, 4.80),
(62, 3, 4.88),
(62, 4, 4.72),
(63, 1, 2.00),
(63, 2, 2.40),
(63, 3, 2.44),
(63, 4, 2.36),
(64, 1, 2.00),
(64, 2, 2.40),
(64, 3, 2.44),
(64, 4, 2.36),
(65, 1, 3.00),
(65, 2, 3.60),
(65, 3, 3.66),
(65, 4, 3.54),
(66, 1, 4.00),
(66, 2, 4.80),
(66, 3, 4.88),
(66, 4, 4.72),
(67, 1, 3.00),
(67, 2, 3.60),
(67, 3, 3.66),
(67, 4, 3.54),
(68, 1, 4.00),
(68, 2, 4.80),
(68, 3, 4.88),
(68, 4, 4.72),
(69, 1, 3.00),
(69, 2, 3.60),
(69, 3, 3.66),
(69, 4, 3.54),
(70, 1, 6.00),
(70, 2, 7.20),
(70, 3, 7.32),
(70, 4, 7.08),
(71, 1, 8.00),
(71, 2, 9.60),
(71, 3, 9.76),
(71, 4, 9.44),
(72, 1, 3.00),
(72, 2, 3.60),
(72, 3, 3.66),
(72, 4, 3.54),
(73, 1, 2.00),
(73, 2, 2.40),
(73, 3, 2.44),
(73, 4, 2.36),
(74, 1, 3.00),
(74, 2, 3.60),
(74, 3, 3.66),
(74, 4, 3.54),
(75, 1, 3.00),
(75, 2, 3.60),
(75, 3, 3.66),
(75, 4, 3.54),
(76, 1, 3.00),
(76, 2, 3.60),
(76, 3, 3.66),
(76, 4, 3.54),
(77, 1, 3.00),
(77, 2, 3.60),
(77, 3, 3.66),
(77, 4, 3.54),
(78, 1, 3.00),
(78, 2, 3.60),
(78, 3, 3.66),
(78, 4, 3.54),
(79, 1, 3.00),
(79, 2, 3.60),
(79, 3, 3.66),
(79, 4, 3.54),
(80, 1, 3.00),
(80, 2, 3.60),
(80, 3, 3.66),
(80, 4, 3.54),
(81, 1, 3.00),
(81, 2, 3.60),
(81, 3, 3.66),
(81, 4, 3.54),
(82, 1, 3.00),
(82, 2, 3.60),
(82, 3, 3.66),
(82, 4, 3.54),
(83, 1, 2.00),
(83, 2, 2.40),
(83, 3, 2.44),
(83, 4, 2.36),
(84, 1, 4.00),
(84, 2, 4.80),
(84, 3, 4.88),
(84, 4, 4.72),
(85, 1, 5.00),
(85, 2, 6.00),
(85, 3, 6.10),
(85, 4, 5.90),
(86, 1, 4.00),
(86, 2, 4.80),
(86, 3, 4.88),
(86, 4, 4.72),
(87, 1, 3.00),
(87, 2, 3.60),
(87, 3, 3.66),
(87, 4, 3.54),
(88, 1, 5.00),
(88, 2, 6.00),
(88, 3, 6.10),
(88, 4, 5.90),
(89, 1, 3.00),
(89, 2, 3.60),
(89, 3, 3.66),
(89, 4, 3.54),
(90, 1, 4.00),
(90, 2, 4.80),
(90, 3, 4.88),
(90, 4, 4.72),
(91, 1, 5.00),
(91, 2, 6.00),
(91, 3, 6.10),
(91, 4, 5.90),
(92, 1, 3.00),
(92, 2, 3.60),
(92, 3, 3.66),
(92, 4, 3.54),
(93, 1, 4.00),
(93, 2, 4.80),
(93, 3, 4.88),
(93, 4, 4.72),
(94, 1, 5.00),
(94, 2, 6.00),
(94, 3, 6.10),
(94, 4, 5.90),
(95, 1, 4.00),
(95, 2, 4.80),
(95, 3, 4.88),
(95, 4, 4.72),
(96, 1, 3.00),
(96, 2, 3.60),
(96, 3, 3.66),
(96, 4, 3.54),
(97, 1, 4.00),
(97, 2, 4.80),
(97, 3, 4.88),
(97, 4, 4.72),
(98, 1, 5.00),
(98, 2, 6.00),
(98, 3, 6.10),
(98, 4, 5.90),
(99, 1, 3.00),
(99, 2, 3.60),
(99, 3, 3.66),
(99, 4, 3.54),
(100, 1, 4.00),
(100, 2, 4.80),
(100, 3, 4.88),
(100, 4, 4.72),
(101, 1, 5.00),
(101, 2, 6.00),
(101, 3, 6.10),
(101, 4, 5.90),
(102, 1, 3.00),
(102, 2, 3.60),
(102, 3, 3.66),
(102, 4, 3.54),
(103, 1, 5.00),
(103, 2, 6.00),
(103, 3, 6.10),
(103, 4, 5.90),
(104, 1, 4.00),
(104, 2, 4.80),
(104, 3, 4.88),
(104, 4, 4.72),
(105, 1, 4.00),
(105, 2, 4.80),
(105, 3, 4.88),
(105, 4, 4.72),
(106, 1, 3.00),
(106, 2, 3.60),
(106, 3, 3.66),
(106, 4, 3.54),
(107, 1, 4.00),
(107, 2, 4.80),
(107, 3, 4.88),
(107, 4, 4.72),
(108, 1, 5.00),
(108, 2, 6.00),
(108, 3, 6.10),
(108, 4, 5.90),
(109, 1, 3.00),
(109, 2, 3.60),
(109, 3, 3.66),
(109, 4, 3.54),
(110, 1, 4.00),
(110, 2, 4.80),
(110, 3, 4.88),
(110, 4, 4.72),
(111, 1, 5.00),
(111, 2, 6.00),
(111, 3, 6.10),
(111, 4, 5.90),
(112, 1, 3.00),
(112, 2, 3.60),
(112, 3, 3.66),
(112, 4, 3.54),
(113, 1, 4.00),
(113, 2, 4.80),
(113, 3, 4.88),
(113, 4, 4.72),
(114, 1, 5.00),
(114, 2, 6.00),
(114, 3, 6.10),
(114, 4, 5.90),
(115, 1, 3.00),
(115, 2, 3.60),
(115, 3, 3.66),
(115, 4, 3.54),
(116, 1, 4.00),
(116, 2, 4.80),
(116, 3, 4.88),
(116, 4, 4.72),
(117, 1, 5.00),
(117, 2, 6.00),
(117, 3, 6.10),
(117, 4, 5.90),
(118, 1, 3.00),
(118, 2, 3.60),
(118, 3, 3.66),
(118, 4, 3.54),
(119, 1, 4.00),
(119, 2, 4.80),
(119, 3, 4.88),
(119, 4, 4.72),
(120, 1, 5.00),
(120, 2, 6.00),
(120, 3, 6.10),
(120, 4, 5.90),
(121, 1, 3.00),
(121, 2, 3.60),
(121, 3, 3.66),
(121, 4, 3.54),
(122, 1, 4.00),
(122, 2, 4.80),
(122, 3, 4.88),
(122, 4, 4.72),
(123, 1, 5.00),
(123, 2, 6.00),
(123, 3, 6.10),
(123, 4, 5.90),
(124, 1, 3.00),
(124, 2, 3.60),
(124, 3, 3.66),
(124, 4, 3.54),
(125, 1, 4.00),
(125, 2, 4.80),
(125, 3, 4.88),
(125, 4, 4.72),
(126, 1, 5.00),
(126, 2, 6.00),
(126, 3, 6.10),
(126, 4, 5.90),
(127, 1, 3.00),
(127, 2, 3.60),
(127, 3, 3.66),
(127, 4, 3.54),
(128, 1, 4.00),
(128, 2, 4.80),
(128, 3, 4.88),
(128, 4, 4.72),
(129, 1, 5.00),
(129, 2, 6.00),
(129, 3, 6.10),
(129, 4, 5.90),
(130, 1, 3.00),
(130, 2, 3.60),
(130, 3, 3.66),
(130, 4, 3.54),
(131, 1, 4.00),
(131, 2, 4.80),
(131, 3, 4.88),
(131, 4, 4.72),
(132, 1, 5.00),
(132, 2, 6.00),
(132, 3, 6.10),
(132, 4, 5.90),
(133, 1, 3.00),
(133, 2, 3.60),
(133, 3, 3.66),
(133, 4, 3.54),
(134, 1, 4.00),
(134, 2, 4.80),
(134, 3, 4.88),
(134, 4, 4.72),
(135, 1, 5.00),
(135, 2, 6.00),
(135, 3, 6.10),
(135, 4, 5.90),
(136, 1, 3.00),
(136, 2, 3.60),
(136, 3, 3.66),
(136, 4, 3.54),
(137, 1, 4.00),
(137, 2, 4.80),
(137, 3, 4.88),
(137, 4, 4.72),
(138, 1, 5.00),
(138, 2, 6.00),
(138, 3, 6.10),
(138, 4, 5.90),
(139, 1, 3.00),
(139, 2, 3.60),
(139, 3, 3.66),
(139, 4, 3.54),
(140, 1, 4.00),
(140, 2, 4.80),
(140, 3, 4.88),
(140, 4, 4.72),
(141, 1, 5.00),
(141, 2, 6.00),
(141, 3, 6.10),
(141, 4, 5.90),
(142, 1, 3.00),
(142, 2, 3.60),
(142, 3, 3.66),
(142, 4, 3.54),
(143, 1, 4.00),
(143, 2, 4.80),
(143, 3, 4.88),
(143, 4, 4.72),
(144, 1, 5.00),
(144, 2, 6.00),
(144, 3, 6.10),
(144, 4, 5.90),
(145, 1, 3.00),
(145, 2, 3.60),
(145, 3, 3.66),
(145, 4, 3.54),
(146, 1, 4.00),
(146, 2, 4.80),
(146, 3, 4.88),
(146, 4, 4.72),
(147, 1, 5.00),
(147, 2, 6.00),
(147, 3, 6.10),
(147, 4, 5.90),
(148, 1, 3.00),
(148, 2, 3.60),
(148, 3, 3.66),
(148, 4, 3.54),
(149, 1, 4.00),
(149, 2, 4.80),
(149, 3, 4.88),
(149, 4, 4.72),
(150, 1, 5.00),
(150, 2, 6.00),
(150, 3, 6.10),
(150, 4, 5.90),
(151, 1, 3.00),
(151, 2, 3.60),
(151, 3, 3.66),
(151, 4, 3.54),
(152, 1, 4.00),
(152, 2, 4.80),
(152, 3, 4.88),
(152, 4, 4.72),
(153, 1, 5.00),
(153, 2, 6.00),
(153, 3, 6.10),
(153, 4, 5.90),
(154, 1, 3.00),
(154, 2, 3.60),
(154, 3, 3.66),
(154, 4, 3.54),
(155, 1, 4.00),
(155, 2, 4.80),
(155, 3, 4.88),
(155, 4, 4.72),
(156, 1, 5.00),
(156, 2, 6.00),
(156, 3, 6.10),
(156, 4, 5.90),
(157, 1, 3.00),
(157, 2, 3.60),
(157, 3, 3.66),
(157, 4, 3.54),
(158, 1, 4.00),
(158, 2, 4.80),
(158, 3, 4.88),
(158, 4, 4.72),
(159, 1, 5.00),
(159, 2, 6.00),
(159, 3, 6.10),
(159, 4, 5.90),
(160, 1, 4.00),
(160, 2, 4.80),
(160, 3, 4.88),
(160, 4, 4.72),
(161, 1, 3.00),
(161, 2, 3.60),
(161, 3, 3.66),
(161, 4, 3.54),
(162, 1, 2.00),
(162, 2, 2.40),
(162, 3, 2.44),
(162, 4, 2.36),
(163, 1, 2.00),
(163, 2, 2.40),
(163, 3, 2.44),
(163, 4, 2.36),
(164, 1, 5.00),
(164, 2, 6.00),
(164, 3, 6.10),
(164, 4, 5.90),
(165, 1, 5.00),
(165, 2, 6.00),
(165, 3, 6.10),
(165, 4, 5.90),
(166, 1, 4.00),
(166, 2, 4.80),
(166, 3, 4.88),
(166, 4, 4.72),
(167, 1, 3.00),
(167, 2, 3.60),
(167, 3, 3.66),
(167, 4, 3.54),
(168, 1, 2.00),
(168, 2, 2.40),
(168, 3, 2.44),
(168, 4, 2.36),
(169, 1, 4.00),
(169, 2, 4.80),
(169, 3, 4.88),
(169, 4, 4.72),
(170, 1, 3.00),
(170, 2, 3.60),
(170, 3, 3.66),
(170, 4, 3.54),
(171, 1, 4.00),
(171, 2, 4.80),
(171, 3, 4.88),
(171, 4, 4.72),
(172, 1, 5.00),
(172, 2, 6.00),
(172, 3, 6.10),
(172, 4, 5.90),
(173, 1, 6.00),
(173, 2, 7.20),
(173, 3, 7.32),
(173, 4, 7.08),
(174, 1, 2.00),
(174, 2, 2.40),
(174, 3, 2.44),
(174, 4, 2.36),
(175, 1, 4.00),
(175, 2, 4.80),
(175, 3, 4.88),
(175, 4, 4.72),
(176, 1, 4.00),
(176, 2, 4.80),
(176, 3, 4.88),
(176, 4, 4.72),
(177, 1, 2.00),
(177, 2, 2.40),
(177, 3, 2.44),
(177, 4, 2.36),
(178, 1, 3.00),
(178, 2, 3.60),
(178, 3, 3.66),
(178, 4, 3.54),
(179, 1, 4.00),
(179, 2, 4.80),
(179, 3, 4.88),
(179, 4, 4.72),
(180, 1, 8.00),
(180, 2, 9.60),
(180, 3, 9.76),
(180, 4, 9.44),
(181, 1, 9.00),
(181, 2, 10.80),
(181, 3, 10.98),
(181, 4, 10.62),
(182, 1, 6.00),
(182, 2, 7.20),
(182, 3, 7.32),
(182, 4, 7.08),
(183, 1, 4.00),
(183, 2, 4.80),
(183, 3, 4.88),
(183, 4, 4.72),
(184, 1, 5.00),
(184, 2, 6.00),
(184, 3, 6.10),
(184, 4, 5.90),
(185, 1, 4.00),
(185, 2, 4.80),
(185, 3, 4.88),
(185, 4, 4.72),
(186, 1, 3.00),
(186, 2, 3.60),
(186, 3, 3.66),
(186, 4, 3.54),
(187, 1, 5.00),
(187, 2, 6.00),
(187, 3, 6.10),
(187, 4, 5.90);
`

async function main() {
    console.log("seeding...");
    const client = new Client({
      connectionString: process.env.CONNECTION_STRING,
    });

    try {
        await client.connect();
        await client.query("BEGIN")
        await client.query(createTables);
        await client.query(insertIntoCategories);
        await client.query(insertIntoItems);
        await client.query(insertIntoItemCategories);
        await client.query(insertIntoRegions);
        await client.query(insertRegionalPrices);
        await client.query("COMMIT");
        console.log("Database seeding completed successfully.");
    } catch (error) {
        console.error("Error seeding database:", error);
        await client.query("ROLLBACK");
    } finally {
        await client.end();
    }
  }
  
 
main().catch(error => {
    console.error("Unexpected error:", error);
    process.exit(1);
  });
  
  